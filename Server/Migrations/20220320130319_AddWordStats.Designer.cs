// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WordleOff.Server.Hubs;

#nullable disable

namespace WordleOff.Server.Migrations
{
    [DbContext(typeof(WordleOffContext))]
    [Migration("20220320130319_AddWordStats")]
    partial class AddWordStats
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WordleOff.Server.Hubs.ConnectionIdToSessionId", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("text");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("ConnectionId");

                    b.HasIndex("ConnectionId")
                        .IsUnique();

                    b.ToTable("ConnectionIdToSessionIds");
                });

            modelBuilder.Entity("WordleOff.Server.Hubs.WordStat", b =>
                {
                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.Property<decimal>("SubmitCountRound1")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("SubmitCountRound2")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("SubmitCountRound3")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("SubmitCountRound4")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("SubmitCountRound5")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("SubmitCountRound6")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("SubmitCountTotal")
                        .HasColumnType("numeric(20,0)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Word");

                    b.HasIndex("Word")
                        .IsUnique();

                    b.ToTable("WordStats");
                });

            modelBuilder.Entity("WordleOff.Shared.Games.GameSession", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PastAnswers")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("PlayerDataDictionary")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("GameSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
